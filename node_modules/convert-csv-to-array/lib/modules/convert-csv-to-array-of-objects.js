'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertCSVToArrayOfObjects = undefined;

var _isNan = require('babel-runtime/core-js/number/is-nan');

var _isNan2 = _interopRequireDefault(_isNan);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _convertStringToNumber = require('convert-string-to-number');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var convertCSVToArrayOfObjects = exports.convertCSVToArrayOfObjects = function convertCSVToArrayOfObjects(data, _ref) {
  var header = _ref.header,
      separator = _ref.separator;

  var csv = data;
  var rows = csv.split('\n');
  var array = [];

  var headerRow = void 0;
  var headerObj = void 0;
  var content = [];

  rows.forEach(function (row, idx) {
    if (idx === 0) {
      headerRow = row.split(separator);
      if (header) {
        array.push(headerRow);
      }
      headerRow.forEach(function (headerItem) {
        headerObj = (0, _assign2.default)({}, headerObj, (0, _defineProperty3.default)({}, headerItem, undefined));
      });
    } else if (rows.length - 1 !== idx) {
      var values = row.split(separator);

      values.forEach(function (value, i) {
        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);
        var thisValue = (0, _isNan2.default)(convertedToNumber) ? value : convertedToNumber;
        headerObj = (0, _assign2.default)({}, headerObj, (0, _defineProperty3.default)({}, headerRow[i], thisValue));
      });

      content.push(headerObj);
    }
  });

  array.push.apply(array, content);

  return array;
};